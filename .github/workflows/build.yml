name: Build Pipeline

# Mendefinisikan event yang akan memicu workflow ini
on:
  push:
    branches: [develop, main, 'feature/*']
  pull_request:
    branches: [develop, main]

# Set environment variables global
env:
  NEXT_TELEMETRY_DISABLED: 1
  NODE_ENV: production
  CI: true

# Definisikan jobs yang akan dijalankan
jobs:
  # Job untuk build aplikasi
  build:
    name: Build Application
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Install dependencies
        env:
          SKIP_ENV_VALIDATION: true
        run: |
          echo "=== Installing dependencies ==="
          # Use GitHub Actions recommended approach
          yarn install --frozen-lockfile || yarn install
          echo "✅ Dependencies installed successfully"

      - name: Build application
        id: build
        env:
          # Database Configuration
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}

          # Clerk Authentication
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}

          # App Configuration
          NODE_ENV: production
          APP_ENV: prod
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL || 'https://maguru.vercel.app' }}

          # Skip environment validation during build
          SKIP_ENV_VALIDATION: true
        run: |
          echo "=== Building Next.js application ==="
          echo "Environment: NODE_ENV=$NODE_ENV, APP_ENV=$APP_ENV"

          # Run build with GitHub Actions recommended approach
          yarn build 

          # Verify build output
          if [ -d ".next" ]; then
            BUILD_SIZE=$(du -sh .next/ | cut -f1)
            echo "build_size=$BUILD_SIZE" >> $GITHUB_OUTPUT
            echo "build_success=true" >> $GITHUB_OUTPUT
            echo "✅ Build completed successfully"
            echo "📂 Build size: $BUILD_SIZE"
          else
            echo "build_success=false" >> $GITHUB_OUTPUT
            echo "❌ Build failed - .next directory not found"
            exit 1
          fi

      - name: Create build summary
        run: |
          echo "### Build Results 🏗️" >> $GITHUB_STEP_SUMMARY
          echo "✅ Build completed successfully" >> $GITHUB_STEP_SUMMARY
          echo "📂 Build size: ${{ steps.build.outputs.build_size }}" >> $GITHUB_STEP_SUMMARY

          echo "#### Environment Details" >> $GITHUB_STEP_SUMMARY
          echo "- Node.js: $(node --version)" >> $GITHUB_STEP_SUMMARY
          echo "- Yarn: $(yarn --version)" >> $GITHUB_STEP_SUMMARY
          echo "- TypeScript: $(yarn list typescript --depth=0 | grep typescript@)" >> $GITHUB_STEP_SUMMARY

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: .next/
          retention-days: 7

      - name: Upload debug info on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-debug-info
          path: |
            .next/trace
            npm-debug.log*
            yarn-debug.log*
            yarn-error.log*
            package.json
            yarn.lock
            tsconfig.json
          retention-days: 3
