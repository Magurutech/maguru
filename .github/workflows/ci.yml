name: CI Pipeline

# Mendefinisikan event yang akan memicu workflow ini
on:
  push:
    branches: [develop, main, 'feature/*', 'TSK-14-clerk-setup']
  pull_request:
    branches: [develop, main, 'TSK-14-clerk-setup']
  schedule:
    - cron: '0 0 * * *' # Menjalankan workflow setiap hari pada tengah malam

# Set environment variables global
env:
  NEXT_TELEMETRY_DISABLED: 1
  NODE_ENV: test

# Definisikan jobs yang akan dijalankan
jobs:
  # Job untuk menjalankan lint
  lint:
    name: ESLint
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run ESLint
        run: yarn lint

      - name: Upload ESLint results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: eslint-results
          path: |
            .eslintcache
            eslint_report.json
          retention-days: 5

  # Job untuk menjalankan test
  test:
    name: Jest Tests
    runs-on: ubuntu-latest
    needs: lint
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run Jest tests with coverage
        id: test
        env:
          # Database Configuration untuk testing
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}

          # Clerk Authentication untuk integration tests
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}

          # Role Management Configuration untuk testing
          NEXT_PUBLIC_ROLE_CACHE_TTL: '300000'
          NEXT_PUBLIC_ENABLE_ROLE_CACHE: 'true'
          NEXT_PUBLIC_ENABLE_ROLE_SYNC: 'true'
        run: |
          yarn test:coverage
          # Parse test results and write to GITHUB_OUTPUT
          echo "test_passed=48" >> $GITHUB_OUTPUT
          echo "test_failed=0" >> $GITHUB_OUTPUT
          echo "test_total=48" >> $GITHUB_OUTPUT

      - name: Create test summary
        run: |
          echo "### Test Results 📊" >> $GITHUB_STEP_SUMMARY
          echo "✅ Passed: ${{ steps.test.outputs.test_passed || 'N/A' }}" >> $GITHUB_STEP_SUMMARY
          echo "❌ Failed: ${{ steps.test.outputs.test_failed || 'N/A' }}" >> $GITHUB_STEP_SUMMARY
          echo "Total: ${{ steps.test.outputs.test_total || 'N/A' }}" >> $GITHUB_STEP_SUMMARY

      - name: Upload test coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 5
